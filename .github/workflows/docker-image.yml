name: Build and Push Docker snapshotter and kubectl Image CI

on: 
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TAG: ${{ github.event.release.tag_name || 'latest' }}
      DTZAR_HELM_KUBECTL_VERSION: ERROR

    permissions:
      contents: write
      packages: write

    steps:
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: load DTZAR_HELM_KUBECTL_VERSION into GITHUB_ENV
        run: cat .env >> $GITHUB_ENV
      
      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Bump chart versions and set image.tag
        run: |
          CHART_FILE="helm/Chart.yaml"
          VALUES_FILE="helm/values.yaml"
          GIT_TAG=${{ env.TAG  }}          

          echo "Using Git tag: $GIT_TAG"

          # Format the chart version to be compatible with Semantic Versioning 2.0.0 using the format x.y.z+build
          new_chart_version=${GIT_TAG%.*}+${GIT_TAG##*.}

          # Update Chart.yaml
          yq -i ".appVersion = \"$GIT_TAG\"" "$CHART_FILE"
          yq -i ".version = \"$new_chart_version\"" "$CHART_FILE"

          # Update values.yaml image.tag
          yq -i ".image.tag = \"$GIT_TAG\"" "$VALUES_FILE"
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Use these credientials because we're pushing the tag below to the GitHub Container Registry
      - name: Log in to GitHub Container Registry using our credentials
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 #hash for v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Build and push snapshotter with cache
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          build-args: |
            DTZAR_HELM_KUBECTL_VERSION=${{ env.DTZAR_HELM_KUBECTL_VERSION  }}
          push: true
          tags: |
            ghcr.io/bluestep-systems/snapshotter:${{ env.TAG }}
            ghcr.io/bluestep-systems/snapshotter:${{ env.DTZAR_HELM_KUBECTL_VERSION  }}
            ghcr.io/bluestep-systems/snapshotter
          cache-from: type=gha
          cache-to: type=gha

      - name: Commit updated Helm files
        if: success()
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add helm/Chart.yaml helm/values.yaml
          git commit -m "chore(helm): Update ${GIT_TAG} in Chart.yaml and values.yaml" || echo "No changes to commit"
          git push origin HEAD:refs/heads/master
  
      - name: Set up SSH for pushing to charts repo
        if: success()
        env:
          DEPLOY_KEY: ${{ secrets.CHARTS_DEPLOY_KEY }}
          DEPLOY_KEY_PUB: ${{ vars.CHARTS_DEPLOY_KEY_PUB }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "$DEPLOY_KEY_PUB" > ~/.ssh/id_rsa.pub
          chmod 644 ~/.ssh/id_rsa.pub
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Package and push Helm chart to gh-pages
        if: success()
        run: |
          CHART_NAME=snapshotter
          CHART_VERSION=$(yq '.version' helm/Chart.yaml)
          rm -rf charts || true
          git clone --branch gh-pages git@github.com:Bluestep-Systems/charts.git
          
          # Package chart
          helm package helm/ --destination charts
          # Update index.yaml
          helm repo index charts --url https://bluestep-systems.github.io/charts/

          # Git commit and push
          cd charts
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Publish $CHART_NAME v$CHART_VERSION"
          git push

